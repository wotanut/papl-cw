services:
  letsencrypt:
    image: adferrand/letsencrypt-dns
    container_name: "letsencrypt-dns"
    env_file: .env
    volumes:
      - "$ROOT/domains.conf:/etc/letsencrypt/domains.conf"
      - "$ROOT/:/etc/letsencrypt"
    environment:
      - VERSION=latest
      - "LETSENCRYPT_USER_MAIL=$EMAIL"
      - "LEXICON_PROVIDER=$PROVIDER"
      - "LEXICON_PROVIDER_OPTIONS=$PROVIDER_OPTIONS"
      - "LEXICON_SLEEP_TIME=$SLEEP_TIME"
      - "CERTS_DIRS_MODE=$DIRS_MODE"
      - "CERTS_FILES_MODE=$FILES_MODE"
    restart: always
  reverse-proxy:
      # The official v3 Traefik docker image
      image: traefik:v3.2
      # Enables the web UI and tells Traefik to listen to docker
      command:
        - "--providers.docker"
        - "--providers.docker.exposedbydefault=false"
        - "--entryPoints.websecure.address=:443"
        - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
        - "--certificatesresolvers.myresolver.acme.email=sam@sambot.dev"
        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
        - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
        - "api.insecure=true"
      ports:
        # The HTTP port
        - "80:80"
        # The Web UI (enabled by --api.insecure=true)
        - "8080:8080"
        # HTTPS
        - "443:443"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
        - letsencrypt:/letsencrypt
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: true
      MYSQL_USER: Nadim
      MYSQL_PASSWORD: ../db_password.txt
      MYSQL_DATABASE: papl
    ports:
      - "3306:3306"
    volumes:
      - db-papl:/var/lib/mysql
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
  web:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gueswebtbook.rule=Host(`api.sambot.dev`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    env_file:
      - path: ../papl.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    links: 
      - db:db
volumes:
  db-papl:
  letsencrypt: